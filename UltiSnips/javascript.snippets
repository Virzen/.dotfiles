#=== debugging ===#
snippet log "console.log"
console.log(${1:'test'})
endsnippet

snippet table "console.table"
console.table($1)
endsnippet


#=== generic ===#
snippet tag "HTML/JSX tag" !w
<$1>${2:${VISUAL}}</$1>
endsnippet

snippet taga "HTML/JSX tag with attrs" !w
<$1 $2>${3:${VISUAL}}</$1>
endsnippet


#=== import/export ===#
snippet im "import" !b
import ${1:{ $2 }} from '$3';
endsnippet

snippet ed "default export" !b
export default $1;
endsnippet

snippet if
if ($1) ${2:{
  $3
}}
endsnippet


#=== React ===#
snippet imr "import React" !b
import React from 'react';
endsnippet

snippet imrc "import React and Component" !b
import React, { Component } from 'react';
endsnippet

snippet imrcp "import React, Component and PropTypes" !b
import React, { Component } from 'react';
import PropTypes from 'prop-types';
endsnippet

snippet imrp "import React and PropTypes" !b
import React from 'react';
import PropTypes from 'prop-types';
endsnippet

snippet impts "import PropTypes alone" !b
import PropTypes from 'prop-types';
endsnippet

snippet ims "import styles" !b
import styles from '${1:./style.css}';
endsnippet

snippet imcx "import classnames" !b
import cx from 'classnames';
endsnippet

snippet imcmp "import component" !b
import $1 from 'components/$1';
endsnippet

snippet imcnt "import container" !b
import $1 from 'containers/$1';
endsnippet

snippet imif "import If" !b
import { If } from 'components/Conditions';
endsnippet

snippet If "If component"
<If ok={$1}>
  $2
</If>
endsnippet

snippet t "I18n translation" !w
I18n.t('$2')
endsnippet

snippet class "Stateful component" !b
class $1 extends Component {
  render() {
    return (
      $2
    )
  }
}
endsnippet

snippet comp "Stateless component" !b
const $1 = ($2) => ${3:{
  return (
    <$4>$5</$4>
  );
}};
endsnippet

snippet defps "defaultProps" !b
$1.defaultProps = {
  $2
};
endsnippet

snippet pts "propTypes" !b
$1.propTypes = {
  $2
};
endsnippet

snippet pt "PropType" !w
PropTypes.$1
endsnippet

snippet ptr "required PropType" !w
PropTypes.$1.isRequired
endsnippet

snippet imrtr
import renderer from 'react-test-renderer';
endsnippet


#=== testing ===#
snippet desc "describe block" !b
describe('$1', () => {
  $2
});
endsnippet

snippet it "it block" !b
it('$1', () => {
  $2
});
endsnippet

snippet exp "expect"
expect($1).to$2;
endsnippet

snippet snap "jest snapshot" !b
const tree = renderer.create(
  $1
);

expect(tree).toMatchSnapshot();
endsnippet
